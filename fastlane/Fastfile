fastlane_version "2.68.0"
default_platform :ios

before_all do
  if is_ci
    setup_ci()
  end
end

desc "Release a new version"
lane :release do |options|
  UI.user_error!("Please use type parameter with one of the options: type:patch, type:minor, type:major") unless ["patch", "minor", "major"].include?(options[:type])
  
  version_number = increment_version_number(bump_type: options[:type], xcodeproj: "StreamChat.xcodeproj")
  
  changes = touch_changelog(release_version: version_number)
  
  version_bump_podspec(path: "StreamChatClient.podspec", version_number: version_number)
  version_bump_podspec(path: "StreamChatCore.podspec", version_number: version_number)
  version_bump_podspec(path: "StreamChat.podspec", version_number: version_number)
  
  sh("bundle exec jazzy --xcodebuild-arguments \"-project\",\"../StreamChat.xcodeproj\",\"-scheme\",\"StreamChatClient\",\"-sdk\",\"iphonesimulator\" --output \"../docs/client\" -a GetStream.io -u getstream.io -g https://github.com/GetStream/stream-chat-swift")
  sh("bundle exec jazzy --xcodebuild-arguments \"-project\",\"../StreamChat.xcodeproj\",\"-scheme\",\"StreamChatCore\",\"-sdk\",\"iphonesimulator\" --output \"../docs/core\" -a GetStream.io -u getstream.io -g https://github.com/GetStream/stream-chat-swift")
  sh("bundle exec jazzy --xcodebuild-arguments \"-project\",\"../StreamChat.xcodeproj\",\"-scheme\",\"StreamChat\",\"-sdk\",\"iphonesimulator\" --output \"../docs/ui\" -a GetStream.io -u getstream.io -g https://github.com/GetStream/stream-chat-swift")
  
  sh("git add -A")
  sh("git commit -m 'Bump #{version_number}'")
  sh("git tag #{version_number}")
  
  github_release = set_github_release(
                     repository_name: "GetStream/stream-chat-swift",
                     api_token: ENV["GITHUB_TOKEN"],
                     name: version_number,
                     tag_name: version_number,
                     description: changes,
                     is_draft: true
                   )
                   
  push_to_git_remote(tags: true)
                   
  pod_push(path: "StreamChatClient.podspec", allow_warnings: true)
  pod_push(path: "StreamChatCore.podspec", allow_warnings: true)
  pod_push(path: "StreamChat.podspec", allow_warnings: true)
end

desc "Installs all Certs and Profiles necessary for development and ad-hoc"
lane :match_me do
  match(
    type: "development",
    app_identifier: [
      "io.getstream.ChatExample",
      "io.getstream.StreamChatClient",
      "io.getstream.StreamChatCore",
      "io.getstream.StreamChat"
    ],
    readonly: true
  )
  
  match(
    type: "adhoc",
    app_identifier: [
      "io.getstream.ChatExample",
      "io.getstream.StreamChatClient",
      "io.getstream.StreamChatCore",
      "io.getstream.StreamChat"
    ],
    readonly: true
  )
end

desc "Builds the latest version with ad-hoc and uploads to firebase"
lane :beta do
  match_me
  
  build_number = increment_build_number(
                   xcodeproj: "./Example/Carthage/ChatExample.xcodeproj",
                   build_number: ENV["GITHUB_SHA"].truncate(7, omission: '')
                 )

  gym(
    project: "./Example/Carthage/ChatExample.xcodeproj",
    scheme: "ChatExample",
    configuration: "Debug",
    export_method: "ad-hoc",
    export_options: "./fastlane/beta_gym_export_options.plist",
    silent: true,
    clean: true,
    include_symbols: true,
    output_directory: "./dist"
  )
  
  message = changelog_from_git_commits(commits_count: 10)
  
  firebase_app_distribution(
      app: "1:674907137625:ios:10131789dab2e7cad7f348",
      groups: "ios-stream-testers",
      release_notes: message
  )
end
